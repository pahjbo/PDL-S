<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="pdls" nsURI="http://www.ivoa.net/pdl/pdls/Pdls" nsPrefix="pdls">
  <eClassifiers xsi:type="ecore:EClass" name="PDL"/>
  <eClassifiers xsi:type="ecore:EClass" name="Service" eSuperTypes="#//PDL">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//Parameter" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="inputs" upperBound="-1"
        eType="#//ParameterGroup" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="outputs" upperBound="-1"
        eType="#//ParameterGroup" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Parameter">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//ParameterType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ParameterType">
    <eLiterals name="boolean" literal="boolean"/>
    <eLiterals name="string" value="1" literal="string"/>
    <eLiterals name="integer" value="2" literal="integer"/>
    <eLiterals name="real" value="3" literal="real"/>
    <eLiterals name="date" value="4" literal="date"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ParameterGroup">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="params" unique="false"
        upperBound="-1" eType="#//Parameter"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="constraint" eType="#//ConstraintOnGroup"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="active" eType="#//WhenConditionalStatement"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="groups" upperBound="-1"
        eType="#//ParameterGroup" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConstraintOnGroup">
    <eStructuralFeatures xsi:type="ecore:EReference" name="statements" upperBound="-1"
        eType="#//ConditionalStatement" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConditionalStatement"/>
  <eClassifiers xsi:type="ecore:EClass" name="WhenConditionalStatement" eSuperTypes="#//ConditionalStatement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="comment" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="criterion" eType="#//ConditionalClause"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IfThenConditionalStatement" eSuperTypes="#//ConditionalStatement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="criterion" eType="#//ConditionalClause"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="clause" eType="#//ConditionalClause"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConditionalClause">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expr" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="cond" eType="#//Condition"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AlwaysConditionalStatement" eSuperTypes="#//ConditionalStatement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="clause" eType="#//ConditionalClause"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Condition"/>
  <eClassifiers xsi:type="ecore:EClass" name="ValueLargerThan" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ValueSmallerThan" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ValueInRange" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="inf" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sup" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ValueDifferentFrom" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="isReal" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReal" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="isRational" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isRational" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="isInteger" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isInteger" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="defaultValue" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BelongsToSet" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="values" upperBound="-1"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="isNull" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isNull" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Function" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#//FunctionType"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expr" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="FunctionType">
    <eLiterals name="size" literal="size"/>
    <eLiterals name="abs" value="1" literal="abs"/>
    <eLiterals name="sin" value="2" literal="sin"/>
    <eLiterals name="cos" value="3" literal="cos"/>
    <eLiterals name="tan" value="4" literal="tan"/>
    <eLiterals name="asin" value="5" literal="asin"/>
    <eLiterals name="acos" value="6" literal="acos"/>
    <eLiterals name="atan" value="7" literal="atan"/>
    <eLiterals name="exp" value="8" literal="exp"/>
    <eLiterals name="log" value="9" literal="log"/>
    <eLiterals name="sum" value="10" literal="sum"/>
    <eLiterals name="product" value="11" literal="product"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AtomicParameterExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="pref" eType="#//Parameter"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="power" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AtomicConstantExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="const" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="power" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="str" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="ParenthesisContent" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expr" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="power" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="OperationType">
    <eLiterals name="PLUS" literal="+"/>
    <eLiterals name="MINUS" value="1" literal="-"/>
    <eLiterals name="MULTIPLY" value="2" literal="*"/>
    <eLiterals name="DIVIDE" value="3" literal="/"/>
    <eLiterals name="SCALAR" value="4" literal="."/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="LogicalConnector">
    <eLiterals name="AND" literal="and"/>
    <eLiterals name="OR" value="1" literal="or"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Criterion" eSuperTypes="#//ConditionalClause">
    <eStructuralFeatures xsi:type="ecore:EReference" name="left" eType="#//ConditionalClause"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="conn" eType="#//LogicalConnector"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="right" eType="#//ConditionalClause"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Operation" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="left" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="op" eType="#//OperationType"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="right" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
</ecore:EPackage>
